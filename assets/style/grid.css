.banner {
    display: grid;
    gap: 1rem;
}
/*
grid-column: 1/3 (A posição da coluna do item, onde começa e onde vai terminar)
grid-row: 2/4 (A posição da linha do item, onde começa e onde vai terminar)
*/
.banner img:nth-child(1) {
    grid-column: 1/3;
}

.banner img:nth-child(4) {
    grid-column: 2/3;
    grid-row: 2/4;
}

.eventos__item {
    /*Gera areas onde é possível particionar*/
    display: grid;
    grid-template-columns: 1fr auto;
    grid-template-rows: auto repeat(2, 1fr) auto;
    grid-template-areas: 
    "imagem imagem"
    "nome nome"
    "data data"
    "local botao";
}

/*Realiza a associação entre o elemento e a area no grid*/
.eventos__item img {
    grid-area: imagem;
}

.eventos__item h3 {
    grid-area: nome;
    /*Alinhando ao centro*/
    align-self: center;
}

.eventos__item h4 {
    grid-area: data;
}

.eventos__item h5 {
    grid-area: local;
    /* Alinhando ao final */
    align-self: end;
}

.eventos__item button {
    grid-area: botao;
}

@media (min-width: 720px) {

    .banner {
        /*Faz o posicionamento do grid*/
        grid-template-columns: calc(50% - 0.75rem) auto auto;
        column-gap: 1.5rem;
    }

    .banner img:nth-child(1) {
        grid-column: 1/2;
        grid-column: 1/3;
    }
    
    .banner img:nth-child(4) {
        grid-column: 3/3;
        grid-row: 1/3;
    }
}

/* Alinhamento no Grid

Para gerar um alinhamento vertical dentro do Grid, utiliza-se a propriedade align. E para criar um alinhamento horizontal, usa-se a propriedade justify. 
Ambas são acompanhadas de outras propriedades que vão dizer se o alinhamento será de um único item, todos os itens ou do container. 

*/